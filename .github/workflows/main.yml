# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
#  pull_request:
#    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: Install SWI-Prolog backend
        uses: logtalk-actions/setup-swi-prolog@master
        with:
          swi-prolog-branch: stable
          swi-prolog-version: latest
      - name: Install Logtalk
        uses: logtalk-actions/setup-logtalk@master
        with:
          logtalk-version: latest
      - name: Checkout Logtalk application to be tested
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Checkout application dependencies
        uses: actions/checkout@v1
        with:
          repository: PaulBrownMagic/json_dict
          ref: refs/heads/master
          fetch-depth: 1
      - name: Run the application tests
        run: |
          logtalk_tester -f tap -c xml || true
          xsltproc --stringparam prefix work/$(basename $GITHUB_REPOSITORY)/$(basename $GITHUB_REPOSITORY)/ --stringparam url https://github.com/$GITHUB_REPOSITORY/tree/$GITHUB_SHA -o coverage_report.html coverage_report.xml
      - name: Upload TAP report
        uses: actions/upload-artifact@master
        with:
          name: tap-report
          path: tap_report.txt
      - name: Upload code coverage report
        uses: actions/upload-artifact@master
        with:
          name: code-coverage-report
          path: coverage_report.html
      - name: Copy code coverage report
        run: |
          mkdir -p docs
          cp coverage_report.html docs/
      - name: Publish code coverage report
        uses: maxheld83/ghpages@v0.2.1
        env:
          BUILD_DIR: public
          GH_PAT: ${{ secrets.GH_PAT }}
      - name: Generate the application documentation
        run: |
          swilgt -g "{loader,lgtdoc(loader)},lgtdoc::directory('.')" -t halt
          cd xml_docs
          printf 'n\nJSON Dict\nPaul Brown and Paulo Moura\n\n\n' | lgt2rst -s -t "json_dict"
          make html
          cd _build/html
          zip -r ../../../docs.zip *
      - name: Upload documentation
        uses: actions/upload-artifact@master
        with:
          name: docs
          path: docs.zip
      - name: Generate the application diagrams
        run: |
          swilgt -g "{loader,diagrams(loader)},diagrams::directory('.')" -t halt
          lgt2svg
          zip diagrams.zip *.svg
      - name: Upload diagrams
        uses: actions/upload-artifact@master
        with:
          name: diagrams
          path: diagrams.zip
